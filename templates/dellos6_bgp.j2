#jinja2: trim_blocks: True,lstrip_blocks: True
{################################
PURPOSE: Add Network statements to BGP

################################
Example:
dellos_bgp:
  OS6:
    asn: 11
    router_id: 1.1.1.1
    maxpath_ibgp: 2
    maxpath_ebgp: 2
    ipv4_network:
       - address: 101.1.2.0 255.255.255.0
         state: present
    ipv6_network:
       - address: 2001:4898:5808:ffa0::/126
         state: present
    ipv4_neighbor:
      - ip: 10.10.234.16
        remote_asn: 64818
        timer: 2 5
        default_originate: True
        peer_group: MUX_HNV_ACCESS
        state: present
    ipv6_neighbor:
      - ip: 2001:4898:5808:ffa2::1
        remote_asn: 64818
        peer_group: MUX_HNV_ACCESS
        state: present
    peer_group:
      - name: MUX_HNV_ACCESS
        asn: 64918
        peergroup_state: present
    redistribute:
      - route_type: connected
        address_type: ipv6
        state: present
    state: present

################################}
{% set bgp_vars = dellos_bgp[hostname] %}
{% if bgp_vars.asn is defined and bgp_vars.asn %}
  {% if bgp_vars.state is defined and bgp_vars.state=="absent" %}
no router bgp {{ bgp_vars.asn }}
  {% else %}
{# Add Feature to the switch #}
router bgp {{ bgp_vars.asn }}
  {% if bgp_vars.router_id is defined %}
    {% if bgp_vars.router_id %}
bgp router-id {{ bgp_vars.router_id }}
    {% else %}
no bgp router-id
    {% endif %}
  {% endif %}
  {% if bgp_vars.maxpath_ebgp is defined and bgp_vars.maxpath_ebgp %}
maximum-paths {{ bgp_vars.maxpath_ebgp }}
  {% else %}
no maximum-paths
  {% endif %}
  {% if bgp_vars.maxpath_ibgp is defined and bgp_vars.maxpath_ibgp %}
maximum-paths ibgp {{ bgp_vars.maxpath_ibgp }}
  {% else %}
no maximum-paths ibgp
  {% endif %}
  {% if bgp_vars.ipv4_network is defined and bgp_vars.ipv4_network %}
    {% for net in bgp_vars.ipv4_network %}
      {% if net.address is defined and net.address %}
      {% set ip_and_mask= net.address.split(" ") %}
        {% if net.state is defined and net.state=="absent" %}
{# remove BGP network announcement #}
no network {{ ip_and_mask[0] }} mask {{ ip_and_mask[1] }} 
{# Add BGP network announcement #}
        {% else %}
network {{ ip_and_mask[0] }} mask {{ ip_and_mask[1] }} 
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}
  {% if bgp_vars.ipv4_neighbor is defined and bgp_vars.ipv4_neighbor %}
    {% for neighbor in bgp_vars.ipv4_neighbor %}
      {% if neighbor.state is defined and neighbor.state == "absent" %}
no neighbor {{ neighbor.ip }}
{# Add BGP network announcement #}
      {% else %}
neighbor {{ neighbor.ip }} remote-as {{ neighbor.remote_asn }}
      {% endif %}
      {% if neighbor.timer is defined and neighbor.timer %}
neighbor {{ neighbor.ip }} timers {{ neighbor.timer }}
      {% else %}
no  neighbor {{ neighbor.ip }} timers {{ neighbor.timer }}
      {% endif %}
      {% if neighbor.default_originate %}
neighbor {{ neighbor.ip }} default-originate
      {% else %}
no neighbor {{ neighbor.ip }} default-originate
      {% endif %}
      {% if neighbor.peer_group is defined and neighbor.peer_group %}
neighbor {{ neighbor.ip }} inherit peer {{ neighbor.peer_group }}
      {% else %}
no neighbor {{ neighbor.ip }} inherit peer {{ neighbor.peer_group }}
      {% endif %}
    {% endfor %}
  {% endif %}
  {% if bgp_vars.ipv6_neighbor is defined and bgp_vars.ipv6_neighbor %}
    {% for neighbor in bgp_vars.ipv6_neighbor %}
      {% if neighbor.state is defined and neighbor.state == "absent" %}
no neighbor {{ neighbor.ip }}
{# Add BGP network announcement #}
      {% else %}
neighbor {{ neighbor.ip }} remote-as {{ neighbor.remote_asn }}
        {% if neighbor.peer_group is defined and neighbor.peer_group %}
neighbor {{ neighbor.ip }} inherit peer {{ neighbor.peer_group }}
        {% else %}
no neighbor {{ neighbor.ip }} inherit peer {{ neighbor.peer_group }}
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}
  {% if bgp_vars.peer_group is defined and bgp_vars.peer_group %}
    {% for peers in bgp_vars.peer_group %}
      {% if peergroup_state is defined and peergroup_state=="absent" %}
no template peer {{ peers.name }}
      {% else %}
template peer {{ peers.name }}
remote-as {{ peers.asn }}
exit
      {% endif %}
    {% endfor %}
  {% endif %}
  {% if bgp_vars.ipv6_network is defined and bgp_vars.ipv6_network %}
    {% for net in bgp_vars.ipv6_network %}
      {% if net.address is defined and net.address %}
address-family ipv6
        {% if net.state is defined and net.state=="absent" %}
{# remove BGP network announcement #}
no network {{ net.address }}
{# Add BGP network announcement #}
        {% else %}
network {{ net.address }}
        {% endif %}
exit
      {% endif %}
    {% endfor %}
  {% endif %}
  {% if bgp_vars.redistribute is defined and bgp_vars.redistribute %}
    {% for routes in bgp_vars.redistribute %}
      {% if routes.route_type is defined and routes.route_type %}
        {% if routes.address_type is defined and routes.address_type=="ipv6" %}
address-family ipv6
          {% if routes.state is defined and routes.state =="absent" %}
no redistribute {{ routes.route_type }}
          {% else %}
redistribute {{ routes.route_type }}
          {% endif %}
        {% elif routes.address_type is defined and routes.address_type=="ipv4" %}
          {% if routes.state is defined and routes.state =="absent" %}
no redistribute {{ routes.route_type }}
          {% else %}
redistribute {{ routes.route_type }}
          {% endif %}
        {% endif %}
exit
      {% endif %}
    {% endfor %}
  {% endif %}
exit
{% endif %}
{% endif %}
