#jinja2: trim_blocks: True, lstrip_blocks: True
{##########################################
PURPOSE: Configure BGP on OS9 Devices

###########################################
Example:
dellos_bgp:
  OS9:
    asn: 12
    router_id:
    maxpath_ibgp: 2
    maxpath_ebgp: 2
    ipv4_network:
       - address: 101.1.1.0/30
         delete: False
    ipv6_network:
      - address: "2001:4898:5808:ffa0::/126"
        state: present
    ipv4_neighbor:
       - remote_asn: 11
         ip: 192.168.11.1
         delete: False
    ipv6_neighbor:
      - remote_asn: 14
        ip: 2001:4898:5808:ffa2::1
        state: present
    peer_group:
      - name: peer1
        asn: 6
        subnet: 10.128.3.192/27
    redistribute:
      - route_type: static
        state: present
    state: present
################################}
{% set bgp_vars = dellos_bgp[hostname] %}

{% if bgp_vars.asn is defined and bgp_vars.asn %}
  {% if bgp_vars.state is defined and bgp_vars.state == "absent" %}
no router bgp {{ bgp_vars.asn }}
  {% else %}
{# Add Feature to the switch #}
router bgp {{ bgp_vars.asn }}
  {% if bgp_vars.router_id is defined %}
    {% if bgp_vars.router_id %}
 bgp router-id {{ bgp_vars.router_id }}
    {% else %}
 no bgp router-id
    {% endif %}
  {% endif %}

  {% if bgp_vars.maxpath_ebgp is defined and bgp_vars.maxpath_ebgp %}
 maximum-paths ebgp {{ bgp_vars.maxpath_ebgp }}
  {% else %}
 no maximum-paths ebgp
  {% endif %}
  
  {% if bgp_vars.maxpath_ibgp is defined and bgp_vars.maxpath_ibgp %}
 maximum-paths ibgp {{ bgp_vars.maxpath_ibgp }}
  {% else %}
 no maximum-paths ibgp
  {% endif %}
 
 {% if bgp_vars.ipv4_network is defined and bgp_vars.ipv4_network %}
    {% for net in bgp_vars.ipv4_network %}
    {# remove BGP network announcement #}
      {% if net.address is defined and net.address %}
        {% if net.state is defined and net.state == "absent" %}
 no network {{ net.address }}
{# Add BGP network announcement #}
        {% else %}
 network {{ net.address }}
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {% if bgp_vars.ipv6_network is defined and bgp_vars.ipv6_network %}
 address-family ipv6 unicast
    {% for net in bgp_vars.ipv6_network %}
      {% if net.address is defined and net.address %}
        {% if net.state is defined and net.state == "absent" %}
 no network {{ net.address }}
        {% else %}
 network {{ net.address }}
        {% endif %}
      {% endif %}
    {% endfor %}
 exit-address-family
  {% endif %}

  {% if bgp_vars.peer_group is defined and bgp_vars.peer_group %}
    {% for net in bgp_vars.peer_group %}
      {% if net.name is defined and net.name %}
      {# Create peer-group #}
        {% if net.state is defined and net.state == "absent" %}
 no neighbor {{ net.name }} peer-group
        {% else %}
          {% if net.passive is defined and net.passive %}
 neighbor {{ net.name }} peer-group passive
            {% if net.subnet is defined and net.subnet %}
 neighbor {{ net.name }} subnet {{ net.subnet }}
            {% endif %}
          {% else %}
 neighbor {{ net.name }} peer-group
          {% endif %}
          {% if net.asn is defined and net.asn %}
 neighbor {{ net.name }} remote-as {{ net.asn }}
          {% endif %}
 neighbor {{ net.name }} no shutdown
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {% if bgp_vars.ipv4_neighbor is defined and bgp_vars.ipv4_neighbor %}
    {% for neighbor in bgp_vars.ipv4_neighbor %}
      {% if neighbor.remote_asn is defined and neighbor.remote_asn %}
        {% if neighbor.ip is defined and neighbor.ip %}
          {% if neighbor.state is defined and neighbor.state == "absent" %}
 no neighbor {{ neighbor.ip }} remote-as {{ neighbor.remote_asn }}
          {% else %}
 neighbor {{ neighbor.ip }} remote-as {{ neighbor.remote_asn }}
            {% if neighbor.timer is defined %}
              {% if neighbor.timer %}
 neighbor {{ neighbor.ip }} timers {{ neighbor.timer }}
              {% else %}
 no neighbor {{ neighbor.ip }} timers
              {% endif %}
            {% endif %}
            {% if neighbor.default_originate is defined %}
              {% if neighbor.default_originate %}
 neighbor {{ neighbor.ip }} default-originate
              {% else %}
 no neighbor {{ neighbor.ip }} default-originate
              {% endif %}
            {% endif %}
            {% if neighbor.peergroup is defined and neighbor.peergroup %}
              {% if neighbor.peergroup_state is defined and neighbor.peergroup_state == "absent" %}
 no neighbor {{ neighbor.ip }} peer-group {{ neighbor.peergroup }}
              {% else %}
 neighbor {{ neighbor.ip }} peer-group {{ neighbor.peergroup }}
              {% endif %}
            {% endif %}
 neighbor {{ neighbor.ip }} no shutdown
          {% endif %}
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {% if bgp_vars.ipv6_neighbor is defined and bgp_vars.ipv6_neighbor %}
    {% for neighbor in bgp_vars.ipv6_neighbor %}
      {% if neighbor.ip is defined and neighbor.ip %}
        {% if neighbor.remote_asn is defined and neighbor.remote_asn %}
          {% if neighbor.state is defined and neighbor.state == "absent" %}
 no neighbor {{ neighbor.ip }} remote-as {{ neighbor.remote_asn }}
          {# Add BGP network announcement #}
          {% else %}
 neighbor {{ neighbor.ip }} remote-as {{ neighbor.remote_asn }}
 neighbor {{ neighbor.ip }} no shutdown
            {% if neighbor.peergroup is defined and neighbor.peergroup %}
              {% if neighbor.peergroup_state is defined and neighbor.peergroup_state == "absent" %}
 no neighbor {{ neighbor.ip }} peer-group {{ neighbor.peergroup }}
              {% else %}
 neighbor {{ neighbor.ip }} peer-group {{ neighbor.peergroup }}
              {% endif %}
            {% endif %}
 address-family ipv6 unicast
 neighbor {{ neighbor.ip }} activate
 exit-address-family
          {% endif %}
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}

  {% if bgp_vars.redistribute is defined and bgp_vars.redistribute %}
    {% for route in bgp_vars.redistribute %}
      {% if route.route_type is defined  and route.route_type %}
        {% if route.address_type is defined and route.address_type %}
          {% if route.address_type == "ipv6" %}
 address-family {{ route.address_type }} unicast
            {% if route.state is defined and route.state == "absent" %}
 no redistribute {{ route.route_type }}
            {% else %}
 redistribute {{ route.route_type }}
            {% endif %}
 exit-address-family
          {% else %}
            {% if route.state is defined and route.state == "absent" %}
 no redistribute {{ route.route_type }}
            {% else %}
 redistribute {{ route.route_type }}
            {% endif %}
          {% endif %}
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}

{% endif %}
{% endif %}
